@startuml

package com.gelvt.gofdp.factorymethod{

    abstract class Carrier <<运载工具>>{
        + {abstract} void transport(goods, destination)
    }

    class Car <<汽车>> extends Carrier{
        + transport(goods, destination)
    }

    class Plane <<飞机>> extends Carrier{
        + transport(goods, destination)
    }

    class Ship <<轮船>> extends Carrier{
        + transport(goods, destination)
    }

    interface CarrierFactory <<运载工具工厂>>{
        + Carrier newInstance()
    }

    class CarFactory <<汽车工厂>> implements CarrierFactory{
        + Carrier newInstance()
    }

    class PlaneFactory <<飞机工厂>> implements CarrierFactory{
        + Carrier newInstance()
    }

    class ShipFactory <<轮船工厂>> implements CarrierFactory{
        + Carrier newInstance()
    }

    CarrierFactory ..> Carrier : 创建
}

package com.gelvt.gofdp{
    class App <<Client>>{
        + void main(String[] args)
    }
}

App ..> CarrierFactory : 调用
App ..> Carrier : 调用

footer
<font size="20" color="red">http://blog.zenghui.name</font>
endfooter

@enduml